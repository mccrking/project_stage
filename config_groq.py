#!/usr/bin/env python3
"""
Configuration Groq API
"""

import os
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

class GroqConfig:
    """Configuration pour l'API Groq"""
    
    # Cl√© API Groq
    API_KEY = os.getenv('GROQ_API_KEY', '')
    
    # URL de l'API
    API_URL = "https://api.groq.com/openai/v1/chat/completions"
    
    # Mod√®le √† utiliser (gratuit et rapide)
    MODEL = "llama3-8b-8192"  # Mod√®le gratuit et performant
    
    # Param√®tres de g√©n√©ration
    MAX_TOKENS = 1000
    TEMPERATURE = 0.7
    
    # Timeout pour les requ√™tes
    TIMEOUT = 30
    
    @classmethod
    def is_configured(cls) -> bool:
        """V√©rifie si l'API est configur√©e"""
        return bool(cls.API_KEY)
    
    @classmethod
    def get_config_info(cls) -> dict:
        """Retourne les informations de configuration"""
        return {
            'api_configured': cls.is_configured(),
            'model': cls.MODEL,
            'max_tokens': cls.MAX_TOKENS,
            'temperature': cls.TEMPERATURE,
            'timeout': cls.TIMEOUT
        }

# Instructions d'installation
INSTALLATION_INSTRUCTIONS = """
üîß CONFIGURATION GROQ API

1. Obtenez votre cl√© API GRATUITE :
   - Allez sur https://console.groq.com/
   - Cr√©ez un compte gratuit
   - G√©n√©rez une nouvelle cl√© API

2. Configurez la cl√© API :
   - Cr√©ez un fichier .env dans le r√©pertoire du projet
   - Ajoutez : GROQ_API_KEY=gsk_votre_cle_api_ici

3. Installez les d√©pendances :
   pip install -r requirements.txt

4. Testez la connexion :
   - Allez dans l'interface IA Avanc√©e
   - Utilisez le bouton "Test Groq"

‚úÖ Avantages de Groq :
- COMPLETEMENT GRATUIT
- R√©ponses ultra-rapides (millisecondes)
- Qualit√© √©lev√©e
- Pas de limite de solde
- Infrastructure fiable
""" 